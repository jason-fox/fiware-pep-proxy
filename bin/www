#!/usr/bin/env node

/*
 * Copyright 2021 -  Universidad PolitÃ©cnica de Madrid.
 *
 * This file is part of PEP-Proxy
 *
 */

const config_service = require('../lib/config_service');
config_service.set_config(require('../config'), true);
const config = config_service.get_config();
const IDM = require('../lib/pdp/keyrock');
const app = require('../app');
const Authorize = require('../lib/authorization_functions');
const errorhandler = require('errorhandler');

config.azf = config.azf || {};
config.https = config.https || {};

const debug = require('debug')('pep-proxy:www');

const os = require('os');
const cluster = require('cluster');
const clusterWorkerSize = os.cpus().length;

process.on('uncaughtException', function (err) {
  debug('Caught exception: ' + err);
});
process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';

function logConfig (idm_config) {
  if (idm_config) {
    debug('IDM authorization configuration: ' + config.authorization.pdp);
    debug(' + Authzforce enabled: ' + idm_config.authzforce);
    switch (idm_config.level) {
      case 'payload':
        debug(' + Authorization rules allowed: HTTP Verb+Resource and Payload');
        break;
      case 'advanced':
        debug(' + Authorization rules allowed: HTTP Verb+Resource and Advanced');
        break;
      default:
        debug(' + Authorization rules allowed: HTTP Verb+Resource');
        break;
    }
  }
};


/**
 * Check that the IDM is responding and the PEP is recognized within the IDM
 * @return an auth token representing the PEP itself to be used in subsequent requests
 */
function connect() {
  let retry = 20;
  return new Promise((resolve, reject) => {
    const connect_with_retry = async () => {
      try {
        await IDM.checkConnectivity();
        debug('IDM is now available  - requesting PEP authentication');

        IDM.authenticatePEP()
          .then((response) => {
            logConfig(response.config);
            return resolve(response.pepToken);
          })
          .catch((error) => {
            return reject('IDM rejected PEP authentication: ' + error.message);
          });
      } catch (e) {
        debug(e.message);
        retry--;
        if (retry === 0) {
          return reject('IDM is not available. Giving up after 20 attempts');
        }
        debug('retry after 5 seconds.');
        //eslint-disable-next-line snakecase/snakecase
        setTimeout(connect_with_retry, 5000);
      }
    };
    connect_with_retry();
  });
}

connect().then(
  (token) => {
    debug('Success authenticating PEP proxy. Proxy Auth-token: ', token);
    if (clusterWorkerSize > 1) {
      if (cluster.isMaster) {
        for (let i = 0; i < clusterWorkerSize; i++) {
          cluster.fork();
        }
      } else {
        app.start_server(token, config);
      }
    } else {
      app.start_server(token,config);
    }
  },
  (err) => {
    debug(err);
    process.exit(1);
  }
);
